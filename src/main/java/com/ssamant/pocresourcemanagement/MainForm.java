/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ssamant.pocresourcemanagement;

import java.awt.Dimension;
import java.awt.Toolkit;
import com.ssamant.utilities.ConfigureIngestionLayer;
import com.ssamant.utilities.ConfigureProcessingLayer;
import com.ssamant.utilities.ConfigureStorageLayer;
import com.ssamant.utilities.DatabaseConnection;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/**
 *
 * @author sunil
 */
public class MainForm extends javax.swing.JFrame implements PropertyChangeListener {

    /**
     * Creates new form MainForm
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public MainForm() {
        initComponents();
        setWindowSize();
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (JOptionPane.showConfirmDialog(null,
                        "Are you sure you want to close this window?", "Close Application?",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    if (DatabaseConnection.con != null) {
                        try {
                            DatabaseConnection.con.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    System.exit(0);
                }
            }
        });
    }

    private void setWindowSize() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            progressBarIngestion.setIndeterminate(false);
            progressBarIngestion.setValue(progress);
            txtAreaClusterInfo.append("Creating Cluster of instances for Ingestion Service...\n");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dppLayersTab = new javax.swing.JTabbedPane();
        panIngestion = new javax.swing.JPanel();
        comboBoxIngestionServices = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        comboBoxBrokersNo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboBoxInstanceType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnBuildIngestionCluster = new javax.swing.JButton();
        progressBarIngestion = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaClusterInfo = new javax.swing.JTextArea();
        btnStopInstance = new javax.swing.JButton();
        txtFieldInstanceId = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        lblInstanceStopMsg = new javax.swing.JLabel();
        btnDeleteIngestionCluster = new javax.swing.JButton();
        javax.swing.JButton btnClearIngestionFormData = new javax.swing.JButton();
        btnLoadIngestionClusterInfo = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        btnStartInstance = new javax.swing.JButton();
        txtFieldStartInstId = new javax.swing.JTextField();
        btnSshAccess = new javax.swing.JButton();
        txtFieldInstId = new javax.swing.JTextField();
        lblErrDnsName = new javax.swing.JLabel();
        lblStartedInstance = new javax.swing.JLabel();
        lblStopInstance = new javax.swing.JLabel();
        txtFieldPartitions = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtFieldReplication = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtFieldBrokerId = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        btnStartIngestionService = new javax.swing.JButton();
        lblClusterStatus = new javax.swing.JLabel();
        btnStartKafkaCluster = new javax.swing.JButton();
        panProcessing = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtAreaSparkResourcesInfo = new javax.swing.JTextArea();
        progressBarProcessing = new javax.swing.JProgressBar();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtFieldStartRestartInstId = new javax.swing.JTextField();
        btnStopInstanceProc = new javax.swing.JButton();
        btnRestartInstanceProc = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnDeleteCluster = new javax.swing.JButton();
        btnLoadProcessingDetails = new javax.swing.JButton();
        lblStopRestartStatus = new javax.swing.JLabel();
        lblBuildProcessingCluster = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        txtFieldInstanceIdConfigure = new javax.swing.JTextField();
        txtFieldDnsNameConfigure = new javax.swing.JTextField();
        txtFieldInstTypeConfigure = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        btnConfigureSparkNode = new javax.swing.JButton();
        lblConfigureSparkNode = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        btnBuildProcessingCluster = new javax.swing.JButton();
        comboBoxNoSparkNodes = new javax.swing.JComboBox<>();
        comboBoxProcFrameworks = new javax.swing.JComboBox<>();
        comboBoxSparkInstType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        panStorage = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        comboBoxNoSQLDb = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboBoxNoNodes = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        comboBoxDbInstType = new javax.swing.JComboBox<>();
        btnBuildStorageCluster = new javax.swing.JButton();
        progressBarStorage = new javax.swing.JProgressBar();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtAreaCassandraResourcesInfo = new javax.swing.JTextArea();
        lblInstanceStatus = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtFieldDnsNameStorage = new javax.swing.JTextField();
        btnConfigureStorageNode = new javax.swing.JButton();
        rdBtnNewNode = new javax.swing.JRadioButton();
        txtFieldSeedIp = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        lblMissingDnsNameStorage = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtFieldInstIdConfigure = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnClearAllStorage = new javax.swing.JButton();
        btnLoadStorageClusterDetails = new javax.swing.JButton();
        btnStartCluster = new javax.swing.JButton();
        lblBuildClusterstatus = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtFieldStorageInstId = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        btnInstanceStorageStart = new javax.swing.JButton();
        btnStopInstanceStorage = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        txtFieldDnsName = new javax.swing.JTextField();
        panDPPLayers = new javax.swing.JPanel();
        btnIngestion = new javax.swing.JButton();
        btnProcessing = new javax.swing.JButton();
        btnStorage = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaIngestionDetails = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaStorageDetails = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaProcessingDetails = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtFieldFutureWorkload = new javax.swing.JTextField();
        txtFieldE2eLatency = new javax.swing.JTextField();
        btnScaleIngestionCluster = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        lblErrorMsgCompResAllocation = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtFieldCurrentWorkload = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAreaIngestionResources = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtAreaProcessingResources = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtAreaStorageResources = new javax.swing.JTextArea();
        btnScaleDppResources = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblSustainableQoSProfile = new javax.swing.JTable();
        btnViewQoSProfile = new javax.swing.JButton();
        btnUpdateQoSProfile = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtAreaSustainabelQoSInfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Resource Management Framework [Data Processing Pipeline]");
        setIconImages(null);
        setName("mainForm"); // NOI18N
        setSize(new java.awt.Dimension(0, 0));

        dppLayersTab.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        comboBoxIngestionServices.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose the messaging framework", "Kafka" }));
        comboBoxIngestionServices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxIngestionServicesActionPerformed(evt);
            }
        });

        jLabel1.setText("Messaging Framework:");

        comboBoxBrokersNo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select the number of broker nodes", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel2.setText("No of Brokers:");

        comboBoxInstanceType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose an instance type", "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge" }));

        jLabel3.setText("Instance Type:");

        btnBuildIngestionCluster.setText("Build Cluster");
        btnBuildIngestionCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildIngestionClusterActionPerformed(evt);
            }
        });

        txtAreaClusterInfo.setColumns(20);
        txtAreaClusterInfo.setLineWrap(true);
        txtAreaClusterInfo.setRows(5);
        txtAreaClusterInfo.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtAreaClusterInfo);

        btnStopInstance.setText("Stop Instance");
        btnStopInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopInstanceActionPerformed(evt);
            }
        });

        jLabel16.setText("Enter instance Id to stop:");

        lblInstanceStopMsg.setForeground(new java.awt.Color(255, 0, 51));

        btnDeleteIngestionCluster.setText("Delete Cluster");
        btnDeleteIngestionCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteIngestionClusterActionPerformed(evt);
            }
        });

        btnClearIngestionFormData.setText("Clear All");
        btnClearIngestionFormData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearIngestionFormDataActionPerformed(evt);
            }
        });

        btnLoadIngestionClusterInfo.setText("Load Current Cluster Details");
        btnLoadIngestionClusterInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadIngestionClusterInfoActionPerformed(evt);
            }
        });

        jLabel17.setText("Enter instance Id to start:");

        btnStartInstance.setText("Start Instance");
        btnStartInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartInstanceActionPerformed(evt);
            }
        });

        btnSshAccess.setText("Configure Kafka Broker");
        btnSshAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSshAccessActionPerformed(evt);
            }
        });

        txtFieldInstId.setName(""); // NOI18N

        lblErrDnsName.setForeground(new java.awt.Color(255, 0, 51));

        lblStartedInstance.setForeground(new java.awt.Color(51, 153, 0));
        lblStartedInstance.setToolTipText("");

        txtFieldPartitions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldPartitionsActionPerformed(evt);
            }
        });

        jLabel18.setText("Topic Partitions:");

        jLabel19.setText("DNSName:");

        jLabel20.setText("Replication Factor:");

        jLabel21.setText("Broker Id:");

        btnStartIngestionService.setText("Start Ingestion Service");

        btnStartKafkaCluster.setText("Start Service Cluster");
        btnStartKafkaCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartKafkaClusterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panIngestionLayout = new javax.swing.GroupLayout(panIngestion);
        panIngestion.setLayout(panIngestionLayout);
        panIngestionLayout.setHorizontalGroup(
            panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panIngestionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblErrDnsName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(313, 313, 313))
            .addGroup(panIngestionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBarIngestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panIngestionLayout.createSequentialGroup()
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblStartedInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtFieldInstanceId, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnStopInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLoadIngestionClusterInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearIngestionFormData, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDeleteIngestionCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStopInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panIngestionLayout.createSequentialGroup()
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClusterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboBoxInstanceType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxBrokersNo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxIngestionServices, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBuildIngestionCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panIngestionLayout.createSequentialGroup()
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldBrokerId, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldInstId, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSshAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(264, 264, 264))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panIngestionLayout.createSequentialGroup()
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)))
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnStartKafkaCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtFieldPartitions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                .addComponent(txtFieldReplication, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(38, 38, 38))
                    .addComponent(jScrollPane1)
                    .addGroup(panIngestionLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addComponent(txtFieldStartInstId, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnStartInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(125, 125, 125)
                                .addComponent(btnStartIngestionService, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblInstanceStopMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panIngestionLayout.setVerticalGroup(
            panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panIngestionLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxIngestionServices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldInstId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panIngestionLayout.createSequentialGroup()
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboBoxBrokersNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFieldReplication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuildIngestionCluster)
                                .addGap(18, 18, 18)
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnStartKafkaCluster)
                                    .addComponent(lblClusterStatus)))
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboBoxInstanceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtFieldBrokerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21))
                                .addGap(18, 18, 18)
                                .addComponent(btnSshAccess)))
                        .addGap(18, 18, 18)
                        .addComponent(progressBarIngestion, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(lblErrDnsName)
                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(lblStopInstance))
                            .addGroup(panIngestionLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(txtFieldInstanceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnStopInstance)
                                    .addComponent(btnLoadIngestionClusterInfo)
                                    .addComponent(btnClearIngestionFormData)
                                    .addComponent(btnDeleteIngestionCluster))
                                .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panIngestionLayout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(panIngestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel17)
                                            .addComponent(txtFieldStartInstId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnStartInstance)))
                                    .addGroup(panIngestionLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnStartIngestionService)))))
                        .addGap(27, 27, 27)
                        .addComponent(lblInstanceStopMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStartedInstance))
                    .addComponent(txtFieldPartitions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        dppLayersTab.addTab("Ingestion Layer", panIngestion);

        txtAreaSparkResourcesInfo.setColumns(20);
        txtAreaSparkResourcesInfo.setRows(5);
        jScrollPane9.setViewportView(txtAreaSparkResourcesInfo);

        jLabel5.setText("Instance Id:");

        btnStopInstanceProc.setText("Stop");
        btnStopInstanceProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopInstanceProcActionPerformed(evt);
            }
        });

        btnRestartInstanceProc.setText("Restart");

        btnDeleteCluster.setText("Delete Cluster");
        btnDeleteCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteClusterActionPerformed(evt);
            }
        });

        btnLoadProcessingDetails.setText("Load Cluster Info");
        btnLoadProcessingDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadProcessingDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLoadProcessingDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnDeleteCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadProcessingDetails)
                    .addComponent(btnDeleteCluster))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFieldStartRestartInstId, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnStopInstanceProc, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRestartInstanceProc))
                    .addComponent(lblStopRestartStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 510, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtFieldStartRestartInstId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStopInstanceProc)
                            .addComponent(btnRestartInstanceProc))
                        .addGap(38, 38, 38)
                        .addComponent(lblStopRestartStatus))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel28.setText("Instance Id:");

        jLabel30.setText("Dns Name:");

        jLabel29.setText("Instance Type:");

        btnConfigureSparkNode.setText("Configure Spark Node");
        btnConfigureSparkNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigureSparkNodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldInstTypeConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldDnsNameConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldInstanceIdConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lblConfigureSparkNode, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(btnConfigureSparkNode)
                        .addGap(56, 56, 56))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFieldInstanceIdConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldDnsNameConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldInstTypeConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfigureSparkNode)
                    .addComponent(lblConfigureSparkNode))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnBuildProcessingCluster.setText("Build Cluster");
        btnBuildProcessingCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildProcessingClusterActionPerformed(evt);
            }
        });

        comboBoxNoSparkNodes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        comboBoxProcFrameworks.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "Spark" }));

        comboBoxSparkInstType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "t2.micro", "t2.small", "t2.medium", " " }));

        jLabel4.setText("Processing Framework:");

        jLabel7.setText("Instance Type:");

        jLabel6.setText("No of Nodes:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboBoxSparkInstType, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxProcFrameworks, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(comboBoxNoSparkNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuildProcessingCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxProcFrameworks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(24, 24, 24)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxSparkInstType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboBoxNoSparkNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuildProcessingCluster))
        );

        javax.swing.GroupLayout panProcessingLayout = new javax.swing.GroupLayout(panProcessing);
        panProcessing.setLayout(panProcessingLayout);
        panProcessingLayout.setHorizontalGroup(
            panProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(progressBarProcessing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane9)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panProcessingLayout.createSequentialGroup()
                .addGap(490, 490, 490)
                .addComponent(lblBuildProcessingCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panProcessingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panProcessingLayout.setVerticalGroup(
            panProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panProcessingLayout.createSequentialGroup()
                .addGroup(panProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panProcessingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panProcessingLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(lblBuildProcessingCluster)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressBarProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(213, 213, 213))
        );

        dppLayersTab.addTab("Processing Layer", panProcessing);

        jLabel8.setText("Storage service [NoSQL DB]:");

        comboBoxNoSQLDb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "Cassandra", " " }));

        jLabel9.setText("No of Nodes:");

        comboBoxNoNodes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel10.setText("Instance Type:");

        comboBoxDbInstType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "t2.small", "t2.medium", "t2.large", "t2.xlarge" }));

        btnBuildStorageCluster.setText("Build Cluster");
        btnBuildStorageCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildStorageClusterActionPerformed(evt);
            }
        });

        txtAreaCassandraResourcesInfo.setColumns(20);
        txtAreaCassandraResourcesInfo.setRows(5);
        jScrollPane8.setViewportView(txtAreaCassandraResourcesInfo);

        jLabel23.setText("DNS Name:");

        btnConfigureStorageNode.setText("Configure Cluster Node");
        btnConfigureStorageNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigureStorageNodeActionPerformed(evt);
            }
        });

        rdBtnNewNode.setSelected(true);
        rdBtnNewNode.setText("New Node");

        jLabel24.setText("Seed IP:");

        jLabel25.setText("Instance Id:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMissingDnsNameStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtFieldInstIdConfigure, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rdBtnNewNode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFieldDnsNameStorage, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnConfigureStorageNode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                        .addComponent(txtFieldSeedIp, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtFieldInstIdConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldDnsNameStorage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldSeedIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdBtnNewNode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfigureStorageNode)
                .addGap(7, 7, 7)
                .addComponent(lblMissingDnsNameStorage))
        );

        btnClearAllStorage.setText("Clear All");
        btnClearAllStorage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllStorageActionPerformed(evt);
            }
        });

        btnLoadStorageClusterDetails.setText("Load Cluster Details");
        btnLoadStorageClusterDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadStorageClusterDetailsActionPerformed(evt);
            }
        });

        btnStartCluster.setText("Start Cluster");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnClearAllStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnLoadStorageClusterDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnStartCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearAllStorage)
                    .addComponent(btnLoadStorageClusterDetails)
                    .addComponent(btnStartCluster))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel22.setText("Instance Id:");

        btnInstanceStorageStart.setText("Restart");
        btnInstanceStorageStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInstanceStorageStartActionPerformed(evt);
            }
        });

        btnStopInstanceStorage.setText("Stop");
        btnStopInstanceStorage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopInstanceStorageActionPerformed(evt);
            }
        });

        jLabel26.setText("Dns Name:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnInstanceStorageStart, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(btnStopInstanceStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldStorageInstId)
                            .addComponent(txtFieldDnsName))
                        .addGap(10, 10, 10))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldStorageInstId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtFieldDnsName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStopInstanceStorage)
                    .addComponent(btnInstanceStorageStart))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panStorageLayout = new javax.swing.GroupLayout(panStorage);
        panStorage.setLayout(panStorageLayout);
        panStorageLayout.setHorizontalGroup(
            panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStorageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBarStorage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8)
                    .addGroup(panStorageLayout.createSequentialGroup()
                        .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panStorageLayout.createSequentialGroup()
                                .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panStorageLayout.createSequentialGroup()
                                        .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(43, 43, 43)
                                        .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnBuildStorageCluster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboBoxNoSQLDb, 0, 188, Short.MAX_VALUE)
                                            .addComponent(comboBoxNoNodes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboBoxDbInstType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(lblBuildClusterstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panStorageLayout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panStorageLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panStorageLayout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(lblInstanceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 384, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panStorageLayout.setVerticalGroup(
            panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStorageLayout.createSequentialGroup()
                .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panStorageLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(comboBoxNoSQLDb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(comboBoxNoNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(comboBoxDbInstType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuildStorageCluster)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblBuildClusterstatus)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panStorageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(progressBarStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInstanceStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panStorageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panStorageLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dppLayersTab.addTab("Storage Layer", panStorage);

        btnIngestion.setText("Kafka Cluster");
        btnIngestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngestionActionPerformed(evt);
            }
        });

        btnProcessing.setText("Spark Cluster");

        btnStorage.setText("Cassandra Cluster");

        txtAreaIngestionDetails.setBackground(new java.awt.Color(204, 255, 204));
        txtAreaIngestionDetails.setColumns(20);
        txtAreaIngestionDetails.setForeground(new java.awt.Color(153, 0, 0));
        txtAreaIngestionDetails.setLineWrap(true);
        txtAreaIngestionDetails.setRows(5);
        txtAreaIngestionDetails.setText("Current Allocation:");
        txtAreaIngestionDetails.setWrapStyleWord(true);
        txtAreaIngestionDetails.setEnabled(false);
        jScrollPane2.setViewportView(txtAreaIngestionDetails);

        txtAreaStorageDetails.setBackground(new java.awt.Color(204, 255, 204));
        txtAreaStorageDetails.setColumns(20);
        txtAreaStorageDetails.setForeground(new java.awt.Color(153, 0, 0));
        txtAreaStorageDetails.setLineWrap(true);
        txtAreaStorageDetails.setRows(5);
        txtAreaStorageDetails.setText("Current Allocation:");
        txtAreaStorageDetails.setWrapStyleWord(true);
        txtAreaStorageDetails.setEnabled(false);
        jScrollPane3.setViewportView(txtAreaStorageDetails);

        txtAreaProcessingDetails.setBackground(new java.awt.Color(204, 255, 204));
        txtAreaProcessingDetails.setColumns(20);
        txtAreaProcessingDetails.setForeground(new java.awt.Color(153, 0, 0));
        txtAreaProcessingDetails.setLineWrap(true);
        txtAreaProcessingDetails.setRows(5);
        txtAreaProcessingDetails.setText("Current Allocation:");
        txtAreaProcessingDetails.setWrapStyleWord(true);
        txtAreaProcessingDetails.setEnabled(false);
        jScrollPane4.setViewportView(txtAreaProcessingDetails);

        jLabel11.setText("Future Workload [DIR]:");

        btnScaleIngestionCluster.setText("Compute Resource Allocation");
        btnScaleIngestionCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScaleIngestionClusterActionPerformed(evt);
            }
        });

        jLabel12.setText("End-to-end Latency:");

        lblErrorMsgCompResAllocation.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorMsgCompResAllocation.setAutoscrolls(true);

        jLabel27.setText("Current Workload:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFieldCurrentWorkload, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldE2eLatency, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnScaleIngestionCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFieldFutureWorkload, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorMsgCompResAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtFieldCurrentWorkload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldFutureWorkload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldE2eLatency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblErrorMsgCompResAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnScaleIngestionCluster)))
        );

        jLabel13.setText("Ingestion Layer Resources:");

        jLabel14.setText("Processing Layer Resources:");

        jLabel15.setText("Storage Layer Resources:");

        txtAreaIngestionResources.setColumns(20);
        txtAreaIngestionResources.setRows(5);
        jScrollPane5.setViewportView(txtAreaIngestionResources);

        txtAreaProcessingResources.setColumns(20);
        txtAreaProcessingResources.setRows(5);
        jScrollPane6.setViewportView(txtAreaProcessingResources);

        txtAreaStorageResources.setColumns(20);
        txtAreaStorageResources.setRows(5);
        jScrollPane7.setViewportView(txtAreaStorageResources);

        btnScaleDppResources.setText("Scale DPP Resources");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane7))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnScaleDppResources, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(60, 60, 60)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnScaleDppResources)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout panDPPLayersLayout = new javax.swing.GroupLayout(panDPPLayers);
        panDPPLayers.setLayout(panDPPLayersLayout);
        panDPPLayersLayout.setHorizontalGroup(
            panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDPPLayersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panDPPLayersLayout.createSequentialGroup()
                        .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                            .addComponent(btnIngestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                            .addComponent(btnProcessing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                            .addComponent(btnStorage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panDPPLayersLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panDPPLayersLayout.setVerticalGroup(
            panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDPPLayersLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIngestion)
                    .addComponent(btnStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcessing))
                .addGap(18, 18, 18)
                .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panDPPLayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panDPPLayersLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        dppLayersTab.addTab("DPP Resource Allocation Details & Scaling ", panDPPLayers);

        tblSustainableQoSProfile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Kafka", "t2.micro", "1, 20, 40", "1, 20, 36", "10, 14, 18"},
                {"Kafka", "t2.small", "1, 30, 60", "1, 30, 55", "10, 12, 15"},
                {"Kafka", "t2.medium", "1, 40, 80", "1, 40, 76", "8, 10, 15"},
                {"Spark", "t2.micro", "1, 25, 50", "1, 25, 45", "45, 120, 950"},
                {"Spark", "t2.small", "1, 35, 70", "1, 35, 64", "40, 110, 950"},
                {"Spark", "t2.medium", "1, 40, 80", "1, 40, 78", "36, 90, 950"},
                {"Cassandra", "t2.micro", "1, 20, 40", "1, 20, 36", "5, 8, 90"},
                {"Cassandra", "t2.small", "1, 25, 50", "1, 25, 44", "5, 10, 80"},
                {"Cassandra", "t2.medium", "1, 30, 60", "1, 30, 55", "5, 8, 65"}
            },
            new String [] {
                "Service Name", "Instance Type", "Input Workload(X1000/sec)", "Sustainable Workload(X1000/sec)", "Sustainable Latency(ms)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tblSustainableQoSProfile);

        btnViewQoSProfile.setText("View QoS Profile");
        btnViewQoSProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewQoSProfileActionPerformed(evt);
            }
        });

        btnUpdateQoSProfile.setText("Update QoS Profile");

        txtAreaSustainabelQoSInfo.setColumns(20);
        txtAreaSustainabelQoSInfo.setLineWrap(true);
        txtAreaSustainabelQoSInfo.setRows(5);
        jScrollPane11.setViewportView(txtAreaSustainabelQoSInfo);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 366, Short.MAX_VALUE)
                .addComponent(btnViewQoSProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnUpdateQoSProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane10)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewQoSProfile)
                            .addComponent(btnUpdateQoSProfile)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(330, Short.MAX_VALUE))
        );

        dppLayersTab.addTab("View QoS Profile", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(dppLayersTab)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dppLayersTab, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 156, Short.MAX_VALUE))
        );

        dppLayersTab.getAccessibleContext().setAccessibleName("dppLayers");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isBuild = false;
    private void btnBuildIngestionClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildIngestionClusterActionPerformed
        isBuild = true;
        progressBarIngestion.setIndeterminate(true);
        btnBuildIngestionCluster.setEnabled(false);
        btnDeleteIngestionCluster.setEnabled(false);
        txtAreaClusterInfo.setText("");
        if (Integer.parseInt(String.valueOf(comboBoxBrokersNo.getSelectedItem())) <= 5) {
            String no = String.valueOf(comboBoxBrokersNo.getSelectedItem());
            int noOfBrokers = Integer.parseInt(no);
            String instType = String.valueOf(comboBoxInstanceType.getSelectedItem());
            String amiId = "ami-0a139537a122f6310"; //kafka snapshot AMI
            try {
                ConfigureIngestionLayer.buildIngestionLayerCluster(noOfBrokers, instType);
            } catch (Exception ex) {
                System.out.printf("Error in instance creation " + ex.getMessage());
            } finally {
                btnBuildIngestionCluster.setEnabled(true);
                progressBarIngestion.setIndeterminate(false);
                progressBarIngestion.setValue(100);
            }
        } else {

        }
    }//GEN-LAST:event_btnBuildIngestionClusterActionPerformed
    /**
     * Function to update/write stack/cluster build status for Kafka cluster
     *
     * @param info
     */
    public void updateClusterBuildStatus(String info) {
        txtAreaClusterInfo.append(info);
    }
    int maxWorkloadCapacity = 10;
    int maxSusLatency = 25;
    int currentIncomingWorkload = 8;
    int currentSusLatency = 22;

    /**
     *
     * @param evt
     */
    private void btnIngestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngestionActionPerformed
        try {
            // ConfigureIngestionLayer.loadIngestionClusterInfoFromDatabase();
            txtAreaIngestionDetails.append("\n");
            ResultSet rs = ConfigureIngestionLayer.loadCurrentClusterDetails();
            while (rs.next()) {
                String instanceId = rs.getString("instance_id");
                String instanceType = rs.getString("instance_type");
                String az = rs.getString("availability_zone");
                String publicDnsName = rs.getString("public_dnsname");
                String publicIp = rs.getString("public_ip");
                String status = rs.getString("status");
                String brokerId = rs.getString("broker_id");
                //System.out.format("%s, %s, %s, %s, %s, %s, %s\n", instanceId, instanceType, az, publicDnsName, publicIp, status, brokerId);
                txtAreaIngestionDetails.append("InstanceID: " + instanceId + ", InstanceType: " + instanceType + ", AvailabilityZone: " + az + ", PublicDns: " + publicDnsName + ", PublicIp: " + publicIp + ", Status: " + status + ", BrokerId: " + brokerId + ".\n");
                txtAreaIngestionDetails.append("-------------------------------------------------------------------------------------------------------------------------");
            }
            //ConfigureIngestionLayer.loadFromFileKafkaClusterDetails(true); //if db is not connected.
            txtAreaIngestionDetails.append("-----------Cluster Capacity & Topic details-----------");
            ResultSet rss = ConfigureIngestionLayer.loadIngestionClusterCapacityDetails();
            while (rss.next()) {
                int clusterID = rss.getInt("cluster_id");
                int noOfNodes = rss.getInt("no_of_nodes");
                String clusterComposition = rss.getString("instance_type");
                int replicationFactor = rss.getInt("replication_factor");
                int partitionsCount = rss.getInt("partitions_count");
                String topicName = rss.getString("topic_name");
                String zkDnsName = rss.getString("zk_dnsname");
                int throughput = rss.getInt("throughput");
                int latency = rss.getInt("latency");

                //System.out.format("%s, %s, %s, %s, %s, %s, %s\n", instanceId, instanceType, az, publicDnsName, publicIp, status, brokerId);
                txtAreaIngestionDetails.append("No of Nodes: " + Integer.toString(noOfNodes) + "\n");
                txtAreaIngestionDetails.append("Cluster Resource Composition: " + clusterComposition + "\n");
                txtAreaIngestionDetails.append("Replication factor: " + Integer.toString(replicationFactor) + "\n");
                txtAreaIngestionDetails.append("Topic partitions: " + Integer.toString(partitionsCount) + "\n");
                txtAreaIngestionDetails.append("Total throughput: " + Integer.toString(throughput) + "\n");
                txtAreaIngestionDetails.append("Sustainable latency: " + Integer.toString(latency) + "\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIngestionActionPerformed
    /**
     * *
     * @param evt
     */
    private void btnScaleIngestionClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScaleIngestionClusterActionPerformed
        if ("".equals(txtFieldFutureWorkload.getText()) || "".equals(txtFieldE2eLatency.getText())) {
            lblErrorMsgCompResAllocation.setText("Please enter appropriate values for future workload and e2e latency.");
        } else {

        }
    }//GEN-LAST:event_btnScaleIngestionClusterActionPerformed

    public void computeE2eDppResourceAllocation() {
        //call external api to compute e2e resource allocation based on future workload, current workload and e2e latency.
    }
    private void comboBoxIngestionServicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxIngestionServicesActionPerformed
        // TODO add your handling code here:
        btnBuildIngestionCluster.setText("Build " + String.valueOf(comboBoxIngestionServices.getSelectedItem()) + " Cluster");
    }//GEN-LAST:event_comboBoxIngestionServicesActionPerformed

    private void btnStopInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopInstanceActionPerformed
        try {
            ConfigureIngestionLayer.stopKafkaBrokerNode(txtFieldInstanceId.getText().trim());

        } catch (InterruptedException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnStopInstanceActionPerformed

    private void btnDeleteIngestionClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteIngestionClusterActionPerformed
        // TODO add your handling code here:
        isBuild = false;
        btnDeleteIngestionCluster.setEnabled(false);
        btnBuildIngestionCluster.setEnabled(false);
        progressBarIngestion.setIndeterminate(true);
        txtAreaClusterInfo.setText(null);
        //function call to delete all the nodes or instances of ingestion service cluster - get info from database and terminate instances
    }//GEN-LAST:event_btnDeleteIngestionClusterActionPerformed

    private void btnClearIngestionFormDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearIngestionFormDataActionPerformed
        clearIngestionTabControls();
    }//GEN-LAST:event_btnClearIngestionFormDataActionPerformed
    public void clearIngestionTabControls() {
        comboBoxIngestionServices.setSelectedIndex(0);
        comboBoxBrokersNo.setSelectedIndex(0);
        comboBoxInstanceType.setSelectedIndex(0);
        txtAreaClusterInfo.setText(null);
        btnBuildIngestionCluster.setText("Build Cluster");
        txtFieldInstanceId.setText("");
        txtFieldStartInstId.setText("");
        txtFieldInstId.setText("");
        txtFieldPartitions.setText("");
        txtFieldReplication.setText("");
        txtFieldBrokerId.setText("");
        lblErrDnsName.setText("");
        lblStartedInstance.setText("");
        lblStopInstance.setText("");
        lblClusterStatus.setText("");
    }

    /**
     * Loads existing cluster details for Ingestion layer if exists.
     *
     * @param evt
     */
    private void btnLoadIngestionClusterInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadIngestionClusterInfoActionPerformed

        try {
            //ConfigureIngestionLayer.loadFromFileKafkaClusterDetails(false);
            //loadIngestionClusterInfoFromDatabase();
            ResultSet rs = ConfigureIngestionLayer.loadCurrentClusterDetails();
            while (rs.next()) {
                String instanceId = rs.getString("instance_id");
                String instanceType = rs.getString("instance_type");
                String az = rs.getString("availability_zone");
                String publicDnsName = rs.getString("public_dnsname");
                String publicIp = rs.getString("public_ip");
                String status = rs.getString("status");
                String brokerId = rs.getString("broker_id");
                //System.out.format("%s, %s, %s, %s, %s, %s, %s\n", instanceId, instanceType, az, publicDnsName, publicIp, status, brokerId);
                txtAreaClusterInfo.append("InstanceID: " + instanceId + ", InstanceType: " + instanceType + ", AvailabilityZone: " + az + ", PublicDns: " + publicDnsName + ", PublicIp: " + publicIp + ", Status: " + status + ", BrokerId: " + brokerId + ".\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoadIngestionClusterInfoActionPerformed

    private void btnBuildProcessingClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildProcessingClusterActionPerformed
        // TODO add your handling code here:
        // CloudFormationSparkCluster.createCloudFormation();
        //txtAreaSparkResourcesInfo.append("Start creating resources for Spark cluster...\n");
        lblBuildProcessingCluster.setText("Start creating resources for Spark cluster...");
        btnBuildProcessingCluster.setEnabled(false);
        //function call to build spark cluster ... ConfigureProcessingLayer.createEc2Instances();
        if ((comboBoxNoSparkNodes.getSelectedIndex() != 0) && (comboBoxSparkInstType.getSelectedIndex() != 0)) {
            try {
                ConfigureProcessingLayer.buildProcessingLayerCluster(Integer.parseInt(String.valueOf(comboBoxNoSparkNodes.getSelectedItem())), String.valueOf(comboBoxSparkInstType.getSelectedIndex()));
            } catch (Exception ex) {

            }
        } else {
            lblBuildProcessingCluster.setText("Please select the values for no of nodes and instance type.");
        }
        lblBuildProcessingCluster.setText("Instances for Spark service cluster are created successfully.");
        btnBuildProcessingCluster.setEnabled(true);

    }//GEN-LAST:event_btnBuildProcessingClusterActionPerformed

    private void btnBuildStorageClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildStorageClusterActionPerformed
        lblBuildClusterstatus.setText("Start creating resources for Cassandra cluster...");
        if ((comboBoxNoSQLDb.getSelectedIndex() != 0) && (comboBoxNoNodes.getSelectedIndex() != 0) && (comboBoxDbInstType.getSelectedIndex() != 0)) {
            try {
                ConfigureStorageLayer.buildNoSqlStorageCluster(Integer.parseInt(String.valueOf(comboBoxNoNodes.getSelectedItem())), String.valueOf(comboBoxDbInstType.getSelectedItem()));
            } catch (SQLException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        lblBuildClusterstatus.setText("");
        lblBuildClusterstatus.setText("Instances for Cassandra service cluster are created successfully!");
    }//GEN-LAST:event_btnBuildStorageClusterActionPerformed

    private void btnStartInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartInstanceActionPerformed
        try {
            String instId = txtFieldStartInstId.getText().trim();
            if (!"".equals(instId)) {
                ConfigureIngestionLayer.restartKafkaBrokerNode(instId);
            } else {
                lblStartedInstance.setText("Enter the valid Instance ID.");
                txtFieldStartInstId.setText("");
            }
        } catch (InterruptedException ex) {
            System.out.printf("Error in instance creation " + ex.getMessage());
        }
    }//GEN-LAST:event_btnStartInstanceActionPerformed

    /**
     * Button action to perform broker node configuration
     *
     * @param evt
     */
    private void btnSshAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSshAccessActionPerformed
        // TODO add your handling code here:
        String pubDnsName = txtFieldInstId.getText().trim();
        if (!"".equals(pubDnsName)) {
            try {
                ConfigureIngestionLayer.configureNewlyCreatedBroker(pubDnsName, txtFieldBrokerId.getText().trim());
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblErrDnsName.setText("Please enter valid pubilc DNS name of the running instance.");
        }


    }//GEN-LAST:event_btnSshAccessActionPerformed

    private void txtFieldPartitionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldPartitionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldPartitionsActionPerformed

    private void btnInstanceStorageStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstanceStorageStartActionPerformed
        if (!"".equals(txtFieldStorageInstId.getText().trim())) {
            ConfigureStorageLayer.restartInstanceStorageLayer(txtFieldStorageInstId.getText().trim());
        }

    }//GEN-LAST:event_btnInstanceStorageStartActionPerformed

    private void btnStopInstanceStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopInstanceStorageActionPerformed
        if (!"".equals(txtFieldStorageInstId.getText().trim()) && !"".equals(txtFieldStorageInstId.getText().trim())) {
            try {
                ConfigureStorageLayer.stopInstanceStorageLayer(txtFieldStorageInstId.getText().trim(), txtFieldDnsName.getText().trim());
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnStopInstanceStorageActionPerformed

    private void btnClearAllStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllStorageActionPerformed
        // TODO add your handling code here:
        clearStorageLayerFields();
    }//GEN-LAST:event_btnClearAllStorageActionPerformed

    private void clearStorageLayerFields() {
        txtFieldStorageInstId.setText("");
        txtFieldDnsNameStorage.setText("");
        comboBoxNoSQLDb.setSelectedIndex(0);
        comboBoxNoNodes.setSelectedIndex(0);
        comboBoxDbInstType.setSelectedIndex(0);
        txtAreaCassandraResourcesInfo.setText("");
        lblInstanceStatus.setText("");
    }
    private void btnConfigureStorageNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigureStorageNodeActionPerformed
        Boolean isNewNode = false;
        String InstanceId = txtFieldInstIdConfigure.getText().trim();
        String seedIp = txtFieldSeedIp.getText().trim();
        if ((!"".equals(txtFieldDnsNameStorage.getText()))) {
            if (rdBtnNewNode.isSelected()) {
                isNewNode = true;
            }
            try {
                ConfigureStorageLayer.configureNoSqlServerNode(txtFieldDnsNameStorage.getText().trim(), isNewNode, seedIp, InstanceId);
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblMissingDnsNameStorage.setText("Enter the valid DNS name of the node to be configured.");
        }
    }//GEN-LAST:event_btnConfigureStorageNodeActionPerformed

    private void btnLoadStorageClusterDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadStorageClusterDetailsActionPerformed
        // TODO add your handling code here:
        //ConfigureStorageLayer.loadFromFileStorageClusterDetails(false);
        ConfigureStorageLayer.loadStorageClusterInfoFromDatabase();
    }//GEN-LAST:event_btnLoadStorageClusterDetailsActionPerformed

    private void btnViewQoSProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewQoSProfileActionPerformed
        //load qos profile from database;
        try {
            if (DatabaseConnection.con == null) {
                try {
                    DatabaseConnection.con = DatabaseConnection.getConnection();
                } catch (SQLException ex) {
                    Logger.getLogger(ConfigureStorageLayer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            String query = "SELECT * FROM sustainable_qos_profile";
            Statement st = DatabaseConnection.con.createStatement();
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                String serviceName = rs.getString("service_name");
                String instanceType = rs.getString("instance_type");
                String jsonData = rs.getString("input_qos_values");
                txtAreaSustainabelQoSInfo.append("Service: " + serviceName + ", Instance Type: " + instanceType + ", [Input Workload:[sus. workload, sus. latency]]" + jsonData + ".\n");
            }
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(ConfigureStorageLayer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewQoSProfileActionPerformed

    private void btnStopInstanceProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopInstanceProcActionPerformed
        // TODO add your handling code here:
        ConfigureProcessingLayer.stopSparkNode(txtFieldStartRestartInstId.getText().trim());
    }//GEN-LAST:event_btnStopInstanceProcActionPerformed

    private void btnLoadProcessingDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadProcessingDetailsActionPerformed
        // TODO add your handling code here:
        Boolean success = ConfigureProcessingLayer.loadSparkClusterDetailsFromDb();
        if (!success) {
            ConfigureProcessingLayer.loadSparkClusterInfoFromFile();
        }

    }//GEN-LAST:event_btnLoadProcessingDetailsActionPerformed

    private void btnConfigureSparkNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigureSparkNodeActionPerformed
        // TODO add your handling code here:
        if (!"".equals(txtFieldInstanceIdConfigure.getText()) && !"".equals(txtFieldDnsNameConfigure.getText()) && !"".equals(txtFieldInstTypeConfigure.getText())) {
            ConfigureProcessingLayer.configureNewlyCreatedSparkNode(txtFieldInstanceIdConfigure.getText().trim(), txtFieldDnsNameConfigure.getText().trim(), txtFieldInstTypeConfigure.getText().trim());
        } else {
            lblConfigureSparkNode.setText("Enter all the fields value.");
        }
    }//GEN-LAST:event_btnConfigureSparkNodeActionPerformed

    private void btnDeleteClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteClusterActionPerformed
        // TODO add your handling code here:
        //Ask to make sure entire deletion of cluster for processing layer: to shut down all services and then instances together.
    }//GEN-LAST:event_btnDeleteClusterActionPerformed

    private void btnStartKafkaClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartKafkaClusterActionPerformed
        // TODO add your handling code here:
        if (!"".equals(txtFieldPartitions.getText().trim())) {
            ConfigureIngestionLayer.configureKafkaTopic(txtFieldPartitions.getText().trim());

        }
    }//GEN-LAST:event_btnStartKafkaClusterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainForm().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuildIngestionCluster;
    private javax.swing.JButton btnBuildProcessingCluster;
    public static javax.swing.JButton btnBuildStorageCluster;
    private javax.swing.JButton btnClearAllStorage;
    private javax.swing.JButton btnConfigureSparkNode;
    private javax.swing.JButton btnConfigureStorageNode;
    private javax.swing.JButton btnDeleteCluster;
    private javax.swing.JButton btnDeleteIngestionCluster;
    private javax.swing.JButton btnIngestion;
    private javax.swing.JButton btnInstanceStorageStart;
    private javax.swing.JButton btnLoadIngestionClusterInfo;
    private javax.swing.JButton btnLoadProcessingDetails;
    private javax.swing.JButton btnLoadStorageClusterDetails;
    private javax.swing.JButton btnProcessing;
    private javax.swing.JButton btnRestartInstanceProc;
    private javax.swing.JButton btnScaleDppResources;
    private javax.swing.JButton btnScaleIngestionCluster;
    private javax.swing.JButton btnSshAccess;
    private javax.swing.JButton btnStartCluster;
    private javax.swing.JButton btnStartIngestionService;
    private javax.swing.JButton btnStartInstance;
    private javax.swing.JButton btnStartKafkaCluster;
    private javax.swing.JButton btnStopInstance;
    private javax.swing.JButton btnStopInstanceProc;
    private javax.swing.JButton btnStopInstanceStorage;
    private javax.swing.JButton btnStorage;
    private javax.swing.JButton btnUpdateQoSProfile;
    private javax.swing.JButton btnViewQoSProfile;
    private javax.swing.JComboBox<String> comboBoxBrokersNo;
    private javax.swing.JComboBox<String> comboBoxDbInstType;
    private javax.swing.JComboBox<String> comboBoxIngestionServices;
    private javax.swing.JComboBox<String> comboBoxInstanceType;
    private javax.swing.JComboBox<String> comboBoxNoNodes;
    private javax.swing.JComboBox<String> comboBoxNoSQLDb;
    private javax.swing.JComboBox<String> comboBoxNoSparkNodes;
    private javax.swing.JComboBox<String> comboBoxProcFrameworks;
    private javax.swing.JComboBox<String> comboBoxSparkInstType;
    private javax.swing.JTabbedPane dppLayersTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblBuildClusterstatus;
    private javax.swing.JLabel lblBuildProcessingCluster;
    public static javax.swing.JLabel lblClusterStatus;
    private javax.swing.JLabel lblConfigureSparkNode;
    private javax.swing.JLabel lblErrDnsName;
    private javax.swing.JLabel lblErrorMsgCompResAllocation;
    public static javax.swing.JLabel lblInstanceStatus;
    public static javax.swing.JLabel lblInstanceStopMsg;
    private javax.swing.JLabel lblMissingDnsNameStorage;
    public static javax.swing.JLabel lblStartedInstance;
    public static javax.swing.JLabel lblStopInstance;
    public static javax.swing.JLabel lblStopRestartStatus;
    private javax.swing.JPanel panDPPLayers;
    private javax.swing.JPanel panIngestion;
    private javax.swing.JPanel panProcessing;
    private javax.swing.JPanel panStorage;
    private javax.swing.JProgressBar progressBarIngestion;
    private javax.swing.JProgressBar progressBarProcessing;
    public static javax.swing.JProgressBar progressBarStorage;
    private javax.swing.JRadioButton rdBtnNewNode;
    private javax.swing.JTable tblSustainableQoSProfile;
    public static javax.swing.JTextArea txtAreaCassandraResourcesInfo;
    public static javax.swing.JTextArea txtAreaClusterInfo;
    public static javax.swing.JTextArea txtAreaIngestionDetails;
    private javax.swing.JTextArea txtAreaIngestionResources;
    private javax.swing.JTextArea txtAreaProcessingDetails;
    private javax.swing.JTextArea txtAreaProcessingResources;
    public static javax.swing.JTextArea txtAreaSparkResourcesInfo;
    private javax.swing.JTextArea txtAreaStorageDetails;
    public static javax.swing.JTextArea txtAreaStorageResources;
    private javax.swing.JTextArea txtAreaSustainabelQoSInfo;
    private javax.swing.JTextField txtFieldBrokerId;
    private javax.swing.JTextField txtFieldCurrentWorkload;
    private javax.swing.JTextField txtFieldDnsName;
    private javax.swing.JTextField txtFieldDnsNameConfigure;
    private javax.swing.JTextField txtFieldDnsNameStorage;
    private javax.swing.JTextField txtFieldE2eLatency;
    private javax.swing.JTextField txtFieldFutureWorkload;
    public static javax.swing.JTextField txtFieldInstId;
    private javax.swing.JTextField txtFieldInstIdConfigure;
    private javax.swing.JTextField txtFieldInstTypeConfigure;
    private javax.swing.JTextField txtFieldInstanceId;
    private javax.swing.JTextField txtFieldInstanceIdConfigure;
    private javax.swing.JTextField txtFieldPartitions;
    private javax.swing.JTextField txtFieldReplication;
    private javax.swing.JTextField txtFieldSeedIp;
    private javax.swing.JTextField txtFieldStartInstId;
    private javax.swing.JTextField txtFieldStartRestartInstId;
    private javax.swing.JTextField txtFieldStorageInstId;
    // End of variables declaration//GEN-END:variables
}
